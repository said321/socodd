package com.socodd.entities;
// Generated 7 sept. 2018 13:04:21 by Hibernate Tools 3.6.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ContratAchat generated by hbm2java
 */
@Entity
@Table(name = "contrat_achat", catalog = "db_socodd")
public class ContratAchat implements java.io.Serializable {

	private Integer id;
	private Fournisseur fournisseur;
	private UniteMesure uniteMesure;
	private Produit produit;
	private String code;
	private String reference;
	private Date dateAchat;
	private String decision;
	private Date duDate;
	private Date auDate;
	private Float quantite;
	private Float prixUIndicatif;
	private Float quantiteLivree;
	private Float resteLivrer;
	private Set<ReceptionProduits> receptionProduitses = new HashSet<ReceptionProduits>(0);

	public ContratAchat() {
	}

	public ContratAchat(Fournisseur fournisseur, UniteMesure uniteMesure, Produit produit, String code,
			String reference, Date dateAchat, String decision, Date duDate, Date auDate, Float quantite,
			Float prixUIndicatif, Float quantiteLivree, Float resteLivrer, Set<ReceptionProduits> receptionProduitses) {
		this.fournisseur = fournisseur;
		this.uniteMesure = uniteMesure;
		this.produit = produit;
		this.code = code;
		this.reference = reference;
		this.dateAchat = dateAchat;
		this.decision = decision;
		this.duDate = duDate;
		this.auDate = auDate;
		this.quantite = quantite;
		this.prixUIndicatif = prixUIndicatif;
		this.quantiteLivree = quantiteLivree;
		this.resteLivrer = resteLivrer;
		this.receptionProduitses = receptionProduitses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fournisseur")
	public Fournisseur getFournisseur() {
		return this.fournisseur;
	}

	public void setFournisseur(Fournisseur fournisseur) {
		this.fournisseur = fournisseur;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "unite_mesure")
	public UniteMesure getUniteMesure() {
		return this.uniteMesure;
	}

	public void setUniteMesure(UniteMesure uniteMesure) {
		this.uniteMesure = uniteMesure;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "produit")
	public Produit getProduit() {
		return this.produit;
	}

	public void setProduit(Produit produit) {
		this.produit = produit;
	}

	@Column(name = "code", length = 10)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "reference", length = 50)
	public String getReference() {
		return this.reference;
	}

	public void setReference(String reference) {
		this.reference = reference;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_achat", length = 10)
	public Date getDateAchat() {
		return this.dateAchat;
	}

	public void setDateAchat(Date dateAchat) {
		this.dateAchat = dateAchat;
	}

	@Column(name = "decision", length = 50)
	public String getDecision() {
		return this.decision;
	}

	public void setDecision(String decision) {
		this.decision = decision;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "du_date", length = 10)
	public Date getDuDate() {
		return this.duDate;
	}

	public void setDuDate(Date duDate) {
		this.duDate = duDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "au_date", length = 10)
	public Date getAuDate() {
		return this.auDate;
	}

	public void setAuDate(Date auDate) {
		this.auDate = auDate;
	}

	@Column(name = "quantite", precision = 12, scale = 0)
	public Float getQuantite() {
		return this.quantite;
	}

	public void setQuantite(Float quantite) {
		this.quantite = quantite;
	}

	@Column(name = "prix_u_indicatif", precision = 12, scale = 0)
	public Float getPrixUIndicatif() {
		return this.prixUIndicatif;
	}

	public void setPrixUIndicatif(Float prixUIndicatif) {
		this.prixUIndicatif = prixUIndicatif;
	}

	@Column(name = "quantite_livree", precision = 12, scale = 0)
	public Float getQuantiteLivree() {
		return this.quantiteLivree;
	}

	public void setQuantiteLivree(Float quantiteLivree) {
		this.quantiteLivree = quantiteLivree;
	}

	@Column(name = "reste_livrer", precision = 12, scale = 0)
	public Float getResteLivrer() {
		return this.resteLivrer;
	}

	public void setResteLivrer(Float resteLivrer) {
		this.resteLivrer = resteLivrer;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contratAchat")
	public Set<ReceptionProduits> getReceptionProduitses() {
		return this.receptionProduitses;
	}

	public void setReceptionProduitses(Set<ReceptionProduits> receptionProduitses) {
		this.receptionProduitses = receptionProduitses;
	}

}
