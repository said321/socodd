<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:sec="http://www.springframework.org/schema/security"
  xsi:schemaLocation="
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<http auto-config="true" use-expressions="true">
	
		<intercept-url pattern="/p/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/u/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
		<intercept-url pattern="/home" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
		
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		
		<form-login 
		    login-page="/login" 
		    default-target-url="/home" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password"/>
		<logout logout-success-url="/login?logout" />
		<!-- enable csrf protection -->
		<csrf/>
		
	</http>

	<authentication-manager>
	  <authentication-provider>
<!--  	<user-service>
		<user name="admin" password="admin" authorities="ROLE_USER" />
	    </user-service>  -->
	    
			   <password-encoder hash="md5"></password-encoder>
	    
	    	   <jdbc-user-service data-source-ref="dataSource" 
	    		users-by-username-query= "select username as username, mot_passe as password, enabled from utilisateur where username=?"	      		
	      		authorities-by-username-query= "select u.username as username, pu.role as role from profile_utilisateur pu, utilisateur u where u.username=? and u.profile=pu.id" />  

	      
	  </authentication-provider>
	</authentication-manager>

</beans:beans>